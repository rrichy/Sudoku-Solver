package com.rrichy;

import org.junit.Test;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;

public class SudokuSolverTest {
    @Test
    public void shouldSolve4x4() {
        SudokuSolver sudoku = new SudokuSolver(new int[][] {
                {1,0,4,0},
                {0,0,0,0},
                {3,0,0,0},
                {0,2,0,0}
        });

        int[][] answer = sudoku.solve();

        int[][] solution = new int[][] {
                {1,3,4,2},
                {2,4,1,3},
                {3,1,2,4},
                {4,2,3,1}
        };

        for(int i = 0; i < 4; i++) {
            assertArrayEquals(solution[i], answer[i]);
        }

    }

    @Test
    public void shouldSolve9x9() {
        SudokuSolver sudoku = new SudokuSolver(new int[][] {
                {0, 0, 6, 1, 0, 0, 0, 0, 8},
                {0, 8, 0, 0, 9, 0, 0, 3, 0},
                {2, 0, 0, 0, 0, 5, 4, 0, 0},
                {4, 0, 0, 0, 0, 1, 8, 0, 0},
                {0, 3, 0, 0, 7, 0, 0, 4, 0},
                {0, 0, 7, 9, 0, 0, 0, 0, 3},
                {0, 0, 8, 4, 0, 0, 0, 0, 6},
                {0, 2, 0, 0, 5, 0, 0, 8, 0},
                {1, 0, 0, 0, 0, 2, 5, 0, 0}
        });

        int[][] answer = sudoku.solve();

        int[][] solution = new int[][] {
                {3,4,6,1,2,7,9,5,8},
                {7,8,5,6,9,4,1,3,2},
                {2,1,9,3,8,5,4,6,7},
                {4,6,2,5,3,1,8,7,9},
                {9,3,1,2,7,8,6,4,5},
                {8,5,7,9,4,6,2,1,3},
                {5,9,8,4,1,3,7,2,6},
                {6,2,4,7,5,9,3,8,1},
                {1,7,3,8,6,2,5,9,4}
        };

        for(int i = 0; i < 9; i++) {
            assertArrayEquals(solution[i], answer[i]);
        }

    }

    @Test
    public void shouldSolve16x16() {
        SudokuSolver sudoku = new SudokuSolver(new int[][] {
                {16, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 5, 0, 0, 0, 1, 7, 0, 0, 0, 0, 10, 16, 0, 4, 0},
                {0, 0, 11, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 6, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                {0, 0, 0, 0, 0, 0, 6, 0, 13, 16, 0, 4, 0, 0, 0, 0},
                {3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 13, 16, 11, 3, 14, 5, 0, 0, 0, 0, 7, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0},
                {0, 0, 0, 1, 0, 0, 9, 0, 0, 0, 16, 11, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0},
                {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0},
                {5, 12, 0, 0, 0, 0, 0, 8, 6, 0, 0, 0, 0, 0, 0, 0}
        });

        int[][] answer = sudoku.solve();

        int[][] solution = new int[][] {
                {16,11,1,13,8,2,3,4,5,12,15,6,9,10,14,7},
                {7,4,14,2,12,13,11,10,16,1,3,9,6,5,15,8},
                {10,9,12,6,16,5,15,14,2,4,7,8,1,3,13,11},
                {8,5,3,15,6,1,7,9,14,13,11,10,16,2,4,12},
                {13,16,11,4,2,9,8,3,7,5,12,1,14,6,10,15},
                {9,14,8,7,13,15,12,16,10,11,6,3,4,1,5,2},
                {2,1,15,10,14,11,6,5,13,16,8,4,3,7,12,9},
                {3,6,5,12,1,4,10,7,9,15,14,2,13,8,11,16},
                {12,13,16,11,3,14,5,1,8,6,9,7,10,15,2,4},
                {15,10,6,5,4,8,13,11,1,3,2,12,7,9,16,14},
                {4,3,7,1,10,12,9,2,15,14,16,11,8,13,6,5},
                {14,8,2,9,7,6,16,15,4,10,5,13,11,12,1,3},
                {11,7,13,8,15,10,14,12,3,2,1,16,5,4,9,6},
                {6,2,9,16,11,3,4,13,12,8,10,5,15,14,7,1},
                {1,15,4,3,5,7,2,6,11,9,13,14,12,16,8,10},
                {5,12,10,14,9,16,1,8,6,7,4,15,2,11,3,13}
        };

        for(int i = 0; i < 16; i++) {
            assertArrayEquals(solution[i], answer[i]);
        }
    }

    @Test
    public void shouldSolve25x25() {
        SudokuSolver sudoku = new SudokuSolver(new int[][] {
                {22,0,5,0,25,0,11,0,18,24,23,12,0,14,15,0,6,20,0,0,0,19,0,0,10},
                {10,20,16,0,1,0,2,0,0,0,11,18,5,0,0,23,0,8,13,0,14,7,0,9,0},
                {8,11,0,13,23,0,0,0,1,25,0,0,3,0,0,0,0,0,7,2,0,15,0,17,0},
                {0,0,7,0,0,16,15,0,0,19,0,0,21,22,1,5,0,0,0,25,3,2,4,0,8},
                {9,17,0,24,0,12,0,21,0,0,13,10,0,0,0,0,0,18,14,4,25,0,16,6,11},
                {0,0,15,0,22,4,7,0,24,8,0,17,0,0,0,6,0,16,9,3,2,1,13,0,0},
                {0,21,2,0,10,6,16,3,0,22,0,0,0,25,11,1,8,0,0,0,7,0,0,12,0},
                {20,16,13,0,0,15,0,0,0,0,9,21,0,3,4,0,24,0,2,22,19,18,0,11,5},
                {0,0,0,18,14,0,0,9,17,5,20,0,0,0,24,19,21,10,25,0,0,0,23,0,0},
                {4,3,0,1,0,11,0,23,14,0,0,2,7,8,13,17,0,12,0,0,22,0,0,20,0},
                {5,0,25,8,4,7,1,0,22,11,17,0,19,0,0,0,0,0,21,16,18,13,12,3,2},
                {16,2,19,0,17,0,21,0,12,0,5,6,0,0,18,8,0,4,23,0,24,0,10,14,7},
                {0,0,23,0,0,14,0,25,0,6,15,0,1,9,0,24,0,0,0,12,0,0,20,5,0},
                {7,12,18,0,6,13,0,17,4,0,0,22,16,0,20,0,10,11,19,0,0,23,8,0,15},
                {21,24,0,9,0,0,23,10,19,0,2,7,8,0,0,0,14,3,15,17,4,0,0,25,0},
                {0,0,8,11,0,1,0,0,0,7,0,0,23,10,0,9,0,0,6,20,13,12,0,19,0},
                {24,19,0,17,3,0,20,0,0,4,6,0,11,0,5,13,15,21,1,0,9,0,0,7,16},
                {13,0,10,0,16,18,25,8,6,14,0,3,9,4,0,22,2,7,0,0,17,0,5,0,1},
                {12,18,14,0,0,9,0,0,5,0,22,0,24,20,0,0,17,25,11,0,23,8,21,0,4},
                {15,0,9,4,5,0,0,19,0,10,0,0,0,12,2,0,0,23,3,18,0,0,25,0,24},
                {25,14,4,0,2,0,8,0,7,0,19,23,0,17,22,16,5,0,0,0,10,0,0,18,0},
                {0,10,0,0,15,20,0,2,0,3,25,11,18,0,6,0,0,0,0,13,0,14,0,24,9},
                {23,0,0,21,13,25,12,0,0,18,0,9,4,0,0,0,3,22,24,14,20,0,0,0,17},
                {0,22,6,0,12,0,0,5,13,9,16,0,20,21,14,0,0,15,17,10,0,3,0,1,0},
                {1,0,0,5,24,17,0,16,15,0,8,13,0,2,0,21,12,0,0,7,0,0,0,4,6}
        });

        int[][] answer = sudoku.solve();

        int[][] solution = new int[][] {
                {22,4,5,2,25,8,11,7,18,24,23,12,17,14,15,3,6,20,16,9,21,19,1,13,10},
                {10,20,16,15,1,22,2,4,3,17,11,18,5,6,25,23,19,8,13,21,14,7,24,9,12},
                {8,11,21,13,23,10,6,14,1,25,4,19,3,16,9,12,22,24,7,2,5,15,18,17,20},
                {14,6,7,12,18,16,15,13,9,19,24,20,21,22,1,5,11,17,10,25,3,2,4,23,8},
                {9,17,3,24,19,12,5,21,23,20,13,10,2,7,8,15,1,18,14,4,25,22,16,6,11},
                {11,5,15,25,22,4,7,18,24,8,12,17,14,19,23,6,20,16,9,3,2,1,13,10,21},
                {17,21,2,19,10,6,16,3,20,22,18,5,15,25,11,1,8,13,4,23,7,24,9,12,14},
                {20,16,13,23,8,15,10,1,25,12,9,21,6,3,4,7,24,14,2,22,19,18,17,11,5},
                {6,7,12,18,14,2,13,9,17,5,20,16,22,1,24,19,21,10,25,11,15,4,23,8,3},
                {4,3,24,1,9,11,19,23,14,21,10,2,7,8,13,17,18,12,5,15,22,16,6,20,25},
                {5,15,25,8,4,7,1,24,22,11,17,14,19,23,10,20,9,6,21,16,18,13,12,3,2},
                {16,2,19,22,17,3,21,20,12,15,5,6,25,11,18,8,13,4,23,1,24,9,10,14,7},
                {3,13,23,10,11,14,18,25,8,6,15,4,1,9,21,24,7,2,22,12,16,17,20,5,19},
                {7,12,18,14,6,13,9,17,4,2,3,22,16,24,20,25,10,11,19,5,1,23,8,21,15},
                {21,24,1,9,20,5,23,10,19,16,2,7,8,13,12,18,14,3,15,17,4,6,11,25,22},
                {2,25,8,11,21,1,24,22,16,7,14,15,23,10,17,9,4,5,6,20,13,12,3,19,18},
                {24,19,22,17,3,23,20,12,2,4,6,25,11,18,5,13,15,21,1,8,9,10,14,7,16},
                {13,23,10,20,16,18,25,8,6,14,21,3,9,4,19,22,2,7,12,24,17,11,5,15,1},
                {12,18,14,6,7,9,3,15,5,13,22,1,24,20,16,10,17,25,11,19,23,8,21,2,4},
                {15,1,9,4,5,21,17,19,11,10,7,8,13,12,2,14,16,23,3,18,6,20,25,22,24},
                {25,14,4,3,2,24,8,11,7,1,19,23,12,17,22,16,5,9,20,6,10,21,15,18,13},
                {19,10,17,16,15,20,22,2,21,3,25,11,18,5,6,4,23,1,8,13,12,14,7,24,9},
                {23,8,11,21,13,25,12,6,10,18,1,9,4,15,7,2,3,22,24,14,20,5,19,16,17},
                {18,22,6,7,12,19,4,5,13,9,16,24,20,21,14,11,25,15,17,10,8,3,2,1,23},
                {1,9,20,5,24,17,14,16,15,23,8,13,10,2,3,21,12,19,18,7,11,25,22,4,6}
        };

        for(int i = 0; i < 25; i++) {
            assertArrayEquals(solution[i], answer[i]);
        }
    }
}
